{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\eclipse-workspace\\\\year4\\\\placement-management\\\\client\\\\src\\\\components\\\\JobPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobPage = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('/api/jobs'); // Adjust this URL based on your backend\n        setJobs(response.data); // Use the response data\n      } catch (error) {\n        setError('Failed to fetch jobs.');\n      }\n    };\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: job.title\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this) // Adjust based on your job object structure\n      ) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(JobPage, \"zJS3rwUDG/3ejv14KozrnBCbr7o=\");\n_c = JobPage;\nexport default JobPage;\nvar _c;\n$RefreshReg$(_c, \"JobPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","JobPage","_s","jobs","setJobs","error","setError","fetchJobs","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","job","title","id","_c","$RefreshReg$"],"sources":["C:/Users/shrey/eclipse-workspace/year4/placement-management/client/src/components/JobPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst JobPage = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const response = await axios.get('/api/jobs'); // Adjust this URL based on your backend\r\n                setJobs(response.data); // Use the response data\r\n            } catch (error) {\r\n                setError('Failed to fetch jobs.');\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Job Listings</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {jobs.length > 0 ? (\r\n                    jobs.map((job) => (\r\n                        <li key={job.id}>{job.title}</li> // Adjust based on your job object structure\r\n                    ))\r\n                ) : (\r\n                    <li>No jobs available</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QAC/CL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZC,QAAQ,CAAC,uBAAuB,CAAC;MACrC;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,KAAK,iBAAIL,OAAA;MAAGgB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDf,OAAA;MAAAW,QAAA,EACKR,IAAI,CAACe,MAAM,GAAG,CAAC,GACZf,IAAI,CAACgB,GAAG,CAAEC,GAAG,iBACTpB,OAAA;QAAAW,QAAA,EAAkBS,GAAG,CAACC;MAAK,GAAlBD,GAAG,CAACE,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;MACrC,CAAC,gBAEFf,OAAA;QAAAW,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CAhCID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}